@model object
@using System.Text
@{
    ViewData["Title"] = "Import CSV";
    // Dropdown-ul cu lista de tabele
    var tableNames = ViewBag.TableNames as List<string> ?? new List<string>();
}

<h1 class="mb-4">Import CSV în tabelă</h1>

<div class="row">
    <div class="col-md-8">
        @* Afișăm eventualele mesaje de succes/eroare *@
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">@TempData["Error"]</div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">@TempData["Success"]</div>
        }

        <form asp-action="ImportCsv" method="post" enctype="multipart/form-data" id="csvForm">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="tableName" class="form-label">Selectează tabela țintă:</label>
                <select class="form-select" id="tableName" name="tableName" required>
                    <option value="" disabled selected>-- Alege tabelă --</option>
                    @foreach (var t in tableNames)
                    {
                        <option value="@t">@t</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Încarcă fișier CSV (drag & drop sau click)</label>
                <div id="drop-zone"
                     class="border border-primary rounded p-5 text-center"
                     style="position: relative; cursor: pointer; background-color: #f8f9fa;">
                    <input type="file" id="csvFile" name="csvFile" accept=".csv" style="display: none;" />
                    <div id="drop-zone-content">
                        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="#0d6efd" class="bi bi-file-earmark-arrow-up mb-3" viewBox="0 0 16 16">
                            <path d="M8 5a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.497.497 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 11.293V5.5A.5.5 0 0 1 8 5z"/>
                            <path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3-.5v-2H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4h-2a1 1 0 0 1-1-1z"/>
                        </svg>
                        <p class="mb-0"><strong>Trage fișierul CSV aici</strong> sau dă click pentru a selecta.</p>
                        <small class="text-muted">Numai fișiere .csv (maxim 10 MB)</small>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Importă CSV</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Obținem referințe către elemente
        const dropZone = document.getElementById('drop-zone');
        const csvFileInput = document.getElementById('csvFile');

        // Când dăm click în zona drop, declanșăm click pe <input type="file">
        dropZone.addEventListener('click', () => {
            csvFileInput.click();
        });

        // Când selectăm manual un fișier, punem numele fișierului în interior(în drop-zone)
        csvFileInput.addEventListener('change', () => {
            if (csvFileInput.files.length > 0) {
                const fileName = csvFileInput.files[0].name;
                document.getElementById('drop-zone-content').innerHTML = `
                    <p class="mb-0"><strong>Fișier selectat:</strong> ${fileName}</p>
                    <small class="text-muted">Dă click pentru a schimba fișierul</small>
                `;
            }
        });

        // Prevenim comportamentul implicit la dragover
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('bg-light');
        });

        // Când părăsim zona drop
        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('bg-light');
        });

        // Când dăm drop pe CSV
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('bg-light');

            if (e.dataTransfer.files.length > 0) {
                const file = e.dataTransfer.files[0];
                // Validăm extensia
                if (file.name.toLowerCase().endsWith('.csv')) {
                    // Creăm un DataTransfer temporar pentru a popula <input type="file">
                    const dt = new DataTransfer();
                    dt.items.add(file);
                    csvFileInput.files = dt.files;

                    document.getElementById('drop-zone-content').innerHTML = `
                        <p class="mb-0"><strong>Fișier selectat:</strong> ${file.name}</p>
                        <small class="text-muted">Dă click pentru a schimba fișierul</small>
                    `;
                } else {
                    alert('Te rog să încarci doar fișiere cu extensia .csv');
                }
            }
        });
    </script>
}
